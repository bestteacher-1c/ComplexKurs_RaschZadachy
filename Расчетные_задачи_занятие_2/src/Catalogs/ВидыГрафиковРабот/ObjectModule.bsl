
// Проверяет, является ли переданная дата рабочим днем по нашему графику
//
// Параметры: 
//     ПроверяемаяДата - дата
//
// Возвращаемое значение:
//     Число: 0 или 1
//
Функция ДеньЯвляетсяРабочим(ПроверяемаяДата)
	
	ЧтоВернем = Новый Структура("Дни,Часы");
	
	ДеньНедели = ДеньНедели(ПроверяемаяДата);
	
    ДанныеПоПроверяемойДате = РабочаяНеделя.Найти(ДеньНедели, "НомерСтроки");
	
	ЧтоВернем.Дни = ?(ДанныеПоПроверяемойДате.РабочийДень, 1, 0);
	ЧтоВернем.Часы = ДанныеПоПроверяемойДате.КоличествоЧасов;
	
	Возврат ЧтоВернем;
	
КонецФункции

Процедура ЗаполнитьКалендарьЗаИнтервал(Интервал) Экспорт
	
	ДлинаСутокВСекундах = 86400;
	
	ДатаНачалаИнтервала = Интервал.ДатаНачала;
	ДатаОкончанияИнтервала = Интервал.ДатаОкончания;
	
	ТекущийДень = ДатаНачалаИнтервала;
	
	НаборЗаписей = РегистрыСведений.ГрафикиРаботы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ГрафикРаботы.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	

	Для каждого Запись Из НаборЗаписей Цикл
		
		Если Запись.Дата < ДатаНачалаИнтервала Тогда
			Продолжить;
		КонецЕсли;
		
		Если Запись.Дата = ТекущийДень Тогда
			
			Запись.ЗначениеДни = ДеньЯвляетсяРабочим(ТекущийДень).Дни;
			Запись.ЗначениеЧасы = ДеньЯвляетсяРабочим(ТекущийДень).Часы;
			ТекущийДень = ТекущийДень + ДлинаСутокВСекундах;
			
		Иначе
			
			Пока ТекущийДень < Мин(Запись.Дата, ДатаОкончанияИнтервала) Цикл
				НовыйДень = НаборЗаписей.Добавить();
				
				НовыйДень.ГрафикРаботы = Ссылка;
				НовыйДень.Дата = ТекущийДень;
				НовыйДень.ЗначениеДни = ДеньЯвляетсяРабочим(ТекущийДень).Дни;
				НовыйДень.ЗначениеЧасы = ДеньЯвляетсяРабочим(ТекущийДень).Часы;
				
				ТекущийДень = ТекущийДень + ДлинаСутокВСекундах;
			КонецЦикла;
			
			Если Запись.Дата > ДатаОкончанияИнтервала Тогда
				Прервать;
			КонецЕсли;
			
			Запись.ЗначениеДни = ДеньЯвляетсяРабочим(ТекущийДень).Дни;
			Запись.ЗначениеЧасы = ДеньЯвляетсяРабочим(ТекущийДень).Часы;
			ТекущийДень = ТекущийДень + ДлинаСутокВСекундах;
			
		КонецЕсли;
	КонецЦикла; // Закончились записи из набора
	
	Пока ТекущийДень < ДатаОкончанияИнтервала Цикл
		НовыйДень = НаборЗаписей.Добавить();
		
		НовыйДень.ГрафикРаботы = Ссылка;
		НовыйДень.Дата = ТекущийДень;
		НовыйДень.ЗначениеДни = ДеньЯвляетсяРабочим(ТекущийДень).Дни;
		НовыйДень.ЗначениеЧасы = ДеньЯвляетсяРабочим(ТекущийДень).Часы;
		
		ТекущийДень = ТекущийДень + ДлинаСутокВСекундах;
	КонецЦикла;
	
	НаборЗаписей.Записать();
КонецПроцедуры

Процедура ЗаполнитьКалендарь_ПоВременнойСхеме(Интервал) Экспорт
	
	ДлинаСутокВСекундах = 86400;
	
	ТекущийДень =  Интервал.ДатаНачала;
	
	
	КоличествоДнейВСхеме = ВременнаяСхема.Количество();
	
	ДеньСхемы = 1;
	
	Если ТекущийДень > ДатаОтсчета Тогда
		РазницаВДнях = (ТекущийДень - ДатаОтсчета)/ДлинаСутокВСекундах;
	Иначе
		РазницаВДнях = (ДатаОтсчета - ТекущийДень)/ДлинаСутокВСекундах;
	КонецЕсли;
	
	КоличествоЦелыхВременныхЦиклов = Цел(РазницаВДнях/КоличествоДнейВСхеме);
	ДнейВКоличествеЦелыхВременныхЦиклов = КоличествоЦелыхВременныхЦиклов * КоличествоДнейВСхеме;
	
	ДеньСхемы = РазницаВДнях - ДнейВКоличествеЦелыхВременныхЦиклов + 1;
	
	
	Пока ТекущийДень <= Интервал.ДатаОкончания Цикл
		
		//НаборЗаписей = РегистрыСведений.ГрафикиРаботы.СоздатьНаборЗаписей();
		//НаборЗаписей.Отбор.Дата.Установить(ТекущийДень);
		//НаборЗаписей.Отбор.ГрафикРаботы.Установить(Ссылка);
		//
		//
		//Запись = НаборЗаписей.Добавить();
		//
		//Запись.Дата = ТекущийДень;
		//Запись.ГрафикРаботы = Ссылка;
		//Запись.Значение = ВременнаяСхема[ДеньСхемы - 1].Значение;
		//Запись.Час = ВременнаяСхема[ДеньСхемы - 1].Час;
		//
		//НаборЗаписей.Записать();
		
		МенеджерЗаписи = РегистрыСведений.ГрафикиРаботы.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.Дата = ТекущийДень;
		МенеджерЗаписи.ГрафикРаботы = Ссылка;
		МенеджерЗаписи.ЗначениеДни = ВременнаяСхема[ДеньСхемы - 1].Значение;
		МенеджерЗаписи.ЗначениеЧасы = ВременнаяСхема[ДеньСхемы - 1].Час;
		
		МенеджерЗаписи.Записать();
		
		
		ТекущийДень = ТекущийДень + ДлинаСутокВСекундах;
		ДеньСхемы = ДеньСхемы + 1;
		ДеньСхемы = ?(ДеньСхемы > КоличествоДнейВСхеме, 1, ДеньСхемы);
		
	КонецЦикла;

КонецПроцедуры


//-- Обработчики событий---
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Для Инд = 1 По 7 Цикл
	
		НоваяСтрока = РабочаяНеделя.Добавить();
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если НедельныйГрафик Тогда
		
		КоличествоРабочихДней = 0;
		
		Для каждого РабочийДень Из РабочаяНеделя Цикл
			
			Если РабочийДень.РабочийДень Тогда
			
				КоличествоРабочихДней = КоличествоРабочихДней + 1;
			
			КонецЕсли;
			
		КонецЦикла;
		
		ЧасовВНеделю = 40;
		ЧасовВДень = Окр(ЧасовВНеделю / КоличествоРабочихДней, 2, РежимОкругления.Окр15как20);
		
		
		Для каждого РабочийДень Из РабочаяНеделя Цикл
			
			Если РабочийДень.РабочийДень Тогда
				
				Если КоличествоРабочихДней = 1 И Не ЗначениеЗаполнено(РабочийДень.КоличествоЧасов) Тогда
				
					РабочийДень.КоличествоЧасов = ЧасовВНеделю;
					
				ИначеЕсли КоличествоРабочихДней = 1 И ЗначениеЗаполнено(РабочийДень.КоличествоЧасов) Тогда
					
					ЧасовВНеделю = ЧасовВНеделю - РабочийДень.КоличествоЧасов;
		
				Иначе
				
					РабочийДень.КоличествоЧасов = ЧасовВДень;
					
					ЧасовВНеделю = ЧасовВНеделю - ЧасовВДень;
					
				КонецЕсли;
				
				КоличествоРабочихДней = КоличествоРабочихДней - 1;
			
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры
