
Процедура Объект_ЗаполнитьТЧ() Экспорт
	
	ОсновныеНачисления.Очистить();
	ДополнительныеНачисления.Очистить();
	Удержания.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СотрудникиСрезПоследних.Подразделение КАК Подразделение,
		|	СотрудникиСрезПоследних.Должность КАК Должность,
		|	СотрудникиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
		|	&НачалоМесяца КАК Период,
		|	СотрудникиСрезПоследних.Состояние КАК Состояние
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(&НачалоМесяца, ) КАК СотрудникиСрезПоследних
		|ГДЕ
		|	СотрудникиСрезПоследних.Состояние <> &Состояние
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо,
		|	Сотрудники.Подразделение,
		|	Сотрудники.Должность,
		|	Сотрудники.ГрафикРаботы,
		|	Сотрудники.Период,
		|	Сотрудники.Состояние
		|ИЗ
		|	РегистрСведений.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеОсновныеНачисленияСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПлановыеОсновныеНачисленияСрезПоследних.ВидРасчета КАК ВидРасчета,
		|	ПлановыеОсновныеНачисленияСрезПоследних.Размер КАК Размер,
		|	&НачалоМесяца КАК Период,
		|	ПлановыеОсновныеНачисленияСрезПоследних.ВидРасчета.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ПОМЕСТИТЬ ВТПлановыеОсновныеНачисления
		|ИЗ
		|	РегистрСведений.ПлановыеОсновныеНачисления.СрезПоследних(&НачалоМесяца, ) КАК ПлановыеОсновныеНачисленияСрезПоследних
		|ГДЕ
		|	ПлановыеОсновныеНачисленияСрезПоследних.Размер > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПлановыеОсновныеНачисления.ФизическоеЛицо,
		|	ПлановыеОсновныеНачисления.ВидРасчета,
		|	ПлановыеОсновныеНачисления.Размер,
		|	ПлановыеОсновныеНачисления.Период,
		|	ПлановыеОсновныеНачисления.ВидРасчета.ТребуетСбораБазы
		|ИЗ
		|	РегистрСведений.ПлановыеОсновныеНачисления КАК ПлановыеОсновныеНачисления
		|ГДЕ
		|	ПлановыеОсновныеНачисления.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеДополнительныеНачисленияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеДополнительныеНачисленияСрезПоследних.ВидРасчета,
		|	ПлановыеДополнительныеНачисленияСрезПоследних.Размер,
		|	&НачалоМесяца КАК Период
		|ПОМЕСТИТЬ ВТПлановыеДополнительныеНачисления
		|ИЗ
		|	РегистрСведений.ПлановыеДополнительныеНачисления.СрезПоследних(&НачалоМесяца, ) КАК ПлановыеДополнительныеНачисленияСрезПоследних
		|ГДЕ
		|	ПлановыеДополнительныеНачисленияСрезПоследних.Размер > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПлановыеДополнительныеНачисления.ФизическоеЛицо,
		|	ПлановыеДополнительныеНачисления.ВидРасчета,
		|	ПлановыеДополнительныеНачисления.Размер,
		|	ПлановыеДополнительныеНачисления.Период
		|ИЗ
		|	РегистрСведений.ПлановыеДополнительныеНачисления КАК ПлановыеДополнительныеНачисления
		|ГДЕ
		|	ПлановыеДополнительныеНачисления.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановыеУдержанияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеУдержанияСрезПоследних.ВидРасчета,
		|	ПлановыеУдержанияСрезПоследних.Размер,
		|	&НачалоМесяца КАК Период
		|ПОМЕСТИТЬ ВТПлановыеУдержания
		|ИЗ
		|	РегистрСведений.ПлановыеУдержания.СрезПоследних(&НачалоМесяца, ) КАК ПлановыеУдержанияСрезПоследних
		|ГДЕ
		|	ПлановыеУдержанияСрезПоследних.Размер > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизическоеЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Размер,
		|	ПлановыеУдержания.Период
		|ИЗ
		|	РегистрСведений.ПлановыеУдержания КАК ПлановыеУдержания
		|ГДЕ
		|	ПлановыеУдержания.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеОсновныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТСотрудники.Подразделение КАК Подразделение,
		|	ВТСотрудники.Должность КАК Должность,
		|	ВТПлановыеОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеОсновныеНачисления.Размер КАК Размер,
		|	ВТПлановыеОсновныеНачисления.Период КАК Период,
		|	ВТСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТСотрудники.Состояние КАК Состояние,
		|	ВТПлановыеОсновныеНачисления.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеОсновныеНачисления КАК ВТПлановыеОсновныеНачисления
		|		ПО (ВТПлановыеОсновныеНачисления.ФизическоеЛицо = ВТСотрудники.ФизическоеЛицо)
		|			И (ВТПлановыеОсновныеНачисления.Период = ВТСотрудники.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ ПО
		|	ФизическоеЛицо,
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеДополнительныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТСотрудники.Подразделение КАК Подразделение,
		|	ВТСотрудники.Должность КАК Должность,
		|	ВТПлановыеДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеДополнительныеНачисления.Размер КАК Размер,
		|	ВТПлановыеДополнительныеНачисления.Период КАК Период,
		|	ВТСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТСотрудники.Состояние КАК Состояние,
		|	ВТПлановыеДополнительныеНачисления.ВидРасчета.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеДополнительныеНачисления КАК ВТПлановыеДополнительныеНачисления
		|		ПО (ВТПлановыеДополнительныеНачисления.ФизическоеЛицо = ВТСотрудники.ФизическоеЛицо)
		|			И (ВТПлановыеДополнительныеНачисления.Период = ВТСотрудники.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ ПО
		|	ФизическоеЛицо,
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТСотрудники.Подразделение КАК Подразделение,
		|	ВТСотрудники.Должность КАК Должность,
		|	ВТПлановыеУдержания.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеУдержания.Размер КАК Размер,
		|	ВТПлановыеУдержания.Период КАК Период,
		|	ВТСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТСотрудники.Состояние КАК Состояние,
		|	ВТПлановыеУдержания.ВидРасчета.ТребуетСбораБазы КАК ТребуетСбораБазы
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПлановыеУдержания КАК ВТПлановыеУдержания
		|		ПО (ВТПлановыеУдержания.ФизическоеЛицо = ВТСотрудники.ФизическоеЛицо)
		|			И (ВТПлановыеУдержания.Период = ВТСотрудники.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ
		|ИТОГИ ПО
		|	ФизическоеЛицо,
		|	ВидРасчета";
	
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("НачалоМесяца", ПериодРегистрации);
	Запрос.УстановитьПараметр("Состояние", Перечисления.СостоянияФизическогоЛица.Уволен);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов.Получить(4);
	
	ВыборкаФизическоеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФизическоеЛицо.Следующий() Цикл
		
		ВыборкаВидРасчета = ВыборкаФизическоеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаВидРасчета.Следующий() Цикл
			
			ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			
			ВыборкаДетальныеЗаписи = ВыборкаВидРасчета.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Если ВыборкаДетальныеЗаписи.Размер = 0 Тогда
					
					ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.Период);
					Продолжить;
					
				КонецЕсли;
					
					НоваяСтрока = ОсновныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					
					НоваяСтрока.ПериодДействияКонец = ПериодДействияКонец;
					НоваяСтрока.ПериодДействияНачало = ВыборкаДетальныеЗаписи.Период;
					
					Если ВыборкаДетальныеЗаписи.ТребуетСбораБазы Тогда
					
						НоваяСтрока.БазовыйПериодКонец = ПериодДействияКонец;
						НоваяСтрока.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.Период;
					
					КонецЕсли;
					
					ПериодДействияКонец = ВыборкаДетальныеЗаписи.Период - 1;
					
				КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	
	//----------------------------------
	
	РезультатЗапроса = МассивРезультатов.Получить(5);
	
	ВыборкаФизическоеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФизическоеЛицо.Следующий() Цикл
		
		ВыборкаВидРасчета = ВыборкаФизическоеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаВидРасчета.Следующий() Цикл
			
			ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			
			ВыборкаДетальныеЗаписи = ВыборкаВидРасчета.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Если ВыборкаДетальныеЗаписи.Размер = 0 Тогда
					
					ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.Период);
					Продолжить;
					
				КонецЕсли;
					
					НоваяСтрока = ДополнительныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					
					Если ВыборкаДетальныеЗаписи.ТребуетСбораБазы Тогда
					
						НоваяСтрока.БазовыйПериодКонец = ПериодДействияКонец;
						НоваяСтрока.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.Период;
					
					КонецЕсли;
					
					ПериодДействияКонец = ВыборкаДетальныеЗаписи.Период - 1;
					
				КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	

	//----------------------
	
	РезультатЗапроса = МассивРезультатов.Получить(6);
	
	ВыборкаФизическоеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФизическоеЛицо.Следующий() Цикл
		
		ВыборкаВидРасчета = ВыборкаФизическоеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаВидРасчета.Следующий() Цикл
			
			ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
			
			ВыборкаДетальныеЗаписи = ВыборкаВидРасчета.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Если ВыборкаДетальныеЗаписи.Размер = 0 Тогда
					
					ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.Период);
					Продолжить;
					
				КонецЕсли;
					
					НоваяСтрока = Удержания.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					
					Если ВыборкаДетальныеЗаписи.ТребуетСбораБазы Тогда
					
						НоваяСтрока.БазовыйПериодКонец = ПериодДействияКонец;
						НоваяСтрока.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.Период;
					
					КонецЕсли;
					
					ПериодДействияКонец = ВыборкаДетальныеЗаписи.Период - 1;
					
				КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


Процедура РассчитатьРесурсы() Экспорт 

	НачатьТранзакцию();
	
	ЗаполнитьНаборЗаписей_ОсновныеНачисления();
	ЗаполнитьНаборЗаписей_ДополнительныеНачисления();
	ЗаполнитьНаборЗаписей_Удержания();
	
	Движения.Записать();
	
	Расчет.РассчитатьРесурсы_ОсновныеНачисления(Движения.ОсновныеНачисления);
	Расчет.РассчитатьРесурсы_ДополнительныеНачисления(Движения.ДополнительныеНачисления);
	Расчет.РассчитатьРесурсы_Удержания(Движения.Удержания);
	
	ПерезаполнитьТабличнуюЧасть_ОсновныеНачисления();
	ПерезаполнитьТабличнуюЧасть_ДополнительныеНачисления();
	ПерезаполнитьТабличнуюЧасть_Удержания();
	
	ОчиститьНаборыЗаписейПослеРасчета();
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры


Процедура ПереРассчитатьРесурсы() Экспорт 

	НачатьТранзакцию();
	
	ЗаполнитьНаборЗаписей_ОсновныеНачисления();
	ЗаполнитьНаборЗаписей_ДополнительныеНачисления();
	ЗаполнитьНаборЗаписей_Удержания();

	Расчет.ПереРассчитатьРесурсы_ОсновныеНачисления(Движения.ОсновныеНачисления);
	Расчет.ПереРассчитатьРесурсы_ДополнительныеНачисления(Движения.ДополнительныеНачисления);
	Расчет.ПереРассчитатьРесурсы_Удержания(Движения.Удержания);
	
	ПерезаполнитьТабличнуюЧасть_ОсновныеНачисления();
	ПерезаполнитьТабличнуюЧасть_ДополнительныеНачисления();
	ПерезаполнитьТабличнуюЧасть_Удержания();
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры



#Область ПроведениеДокумента


Процедура ОбработкаПроведения(Отказ, Режим)

	ЗаполнитьНаборЗаписей_ОсновныеНачисления();
	ЗаполнитьНаборЗаписей_ДополнительныеНачисления();
	ЗаполнитьНаборЗаписей_Удержания();
	
	Движения.Записать();
	
	//РассчитатьРесурсы_ОсновныеНачисления();
	//РассчитатьРесурсы_ДополнительныеНачисления();
	//РассчитатьРесурсы_Удержания();
	
//	Расчет.РассчитатьРесурсы_ОсновныеНачисления(Движения.ОсновныеНачисления);
//	Расчет.РассчитатьРесурсы_ДополнительныеНачисления(Движения.ДополнительныеНачисления);
//	Расчет.РассчитатьРесурсы_Удержания(Движения.Удержания);
	
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ОсновныеНачисления()
	
	Перем Движение, ТекСтрокаОсновныеНачисления;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ПериодДействияНачало;
		Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ПериодДействияКонец;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = ТекСтрокаОсновныеНачисления.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаОсновныеНачисления.БазовыйПериодКонец;
		Движение.ФизическоеЛицо = ТекСтрокаОсновныеНачисления.ФизическоеЛицо;
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
		Движение.Должность = ТекСтрокаОсновныеНачисления.Должность;
		Движение.Результат = ТекСтрокаОсновныеНачисления.Результат;
		Движение.ОтработаноДней = ТекСтрокаОсновныеНачисления.ОтработаноДней;
		Движение.Размер = ТекСтрокаОсновныеНачисления.Размер;
		Движение.ГрафикРаботы = ТекСтрокаОсновныеНачисления.ГрафикРаботы;
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ДополнительныеНачисления()
	
	Перем Движение, ТекСтрокаДополнительныеНачисления;
	
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = ТекСтрокаДополнительныеНачисления.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаДополнительныеНачисления.БазовыйПериодКонец;
		Движение.ФизическоеЛицо = ТекСтрокаДополнительныеНачисления.ФизическоеЛицо;
		Движение.Подразделение = ТекСтрокаДополнительныеНачисления.Подразделение;
		Движение.Должность = ТекСтрокаДополнительныеНачисления.Должность;
		Движение.Результат = ТекСтрокаДополнительныеНачисления.Результат;
		Движение.Размер = ТекСтрокаДополнительныеНачисления.Размер;
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записывать = Истина;
	
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_Удержания()
	
	Перем Движение, ТекСтрокаУдержания;
	
	Для Каждого ТекСтрокаУдержания Из Удержания Цикл
		Движение = Движения.Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаУдержания.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = ТекСтрокаУдержания.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаУдержания.БазовыйПериодКонец;
		Движение.ФизическоеЛицо = ТекСтрокаУдержания.ФизическоеЛицо;
		Движение.Подразделение = ТекСтрокаУдержания.Подразделение;
		Движение.Должность = ТекСтрокаУдержания.Должность;
		Движение.Результат = ТекСтрокаУдержания.Результат;
		Движение.Размер = ТекСтрокаУдержания.Размер;
	КонецЦикла;

	Движения.Удержания.Записывать = Истина;
	
КонецПроцедуры


#КонецОбласти 


#Область РасчетРесурсов
	

Процедура РассчитатьРесурсы_ОсновныеНачисления()

	НаборЗаписей = Движения.ОсновныеНачисления;
	
    //Получаем упорядоченные по категориям данные текущего набора записей, записанные в БД
	Менеджер = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	ОсновныеНачисления.Регистратор КАК Регистратор,
	|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ОсновныеНачисления.Активность КАК Активность,
	|	ОсновныеНачисления.Сторно КАК Сторно,
	|	ОсновныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОсновныеНачисления.Подразделение КАК Подразделение,
	|	ОсновныеНачисления.Должность КАК Должность,
	|	ОсновныеНачисления.Результат КАК Результат,
	|	ОсновныеНачисления.ОтработаноДней КАК ОтработаноДней,
	|	ОсновныеНачисления.Размер КАК Размер,
	|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДвижения.ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчетаДокумента
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыРасчетаДокумента.ВидРасчета,
	|	ОсновныеНачисленияВедущиеВидыРасчета.ВидРасчета КАК ВедущийВидРасчета
	|ПОМЕСТИТЬ ВТВедущиеВидыРасчета
	|ИЗ
	|	ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисления.ВедущиеВидыРасчета КАК ОсновныеНачисленияВедущиеВидыРасчета
	|		ПО ВТВидыРасчетаДокумента.ВидРасчета = ОсновныеНачисленияВедущиеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедущиеВидыРасчета.ВидРасчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТВидыРасчетаДокумента.ВидРасчета) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыВидовРасчета
	|ИЗ
	|	ВТВедущиеВидыРасчета КАК ВТВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ПО ВТВедущиеВидыРасчета.ВедущийВидРасчета = ВТВидыРасчетаДокумента.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВедущиеВидыРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижения.НомерСтроки КАК НомерСтроки,
	|	ВТДвижения.ВидРасчета КАК ВидРасчета,
	|	ВТДвижения.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТДвижения.Регистратор КАК Регистратор,
	|	ВТДвижения.ПериодДействия КАК ПериодДействия,
	|	ВТДвижения.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВТДвижения.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ВТДвижения.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТДвижения.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТДвижения.Активность КАК Активность,
	|	ВТДвижения.Сторно КАК Сторно,
	|	ВТДвижения.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДвижения.Подразделение КАК Подразделение,
	|	ВТДвижения.Должность КАК Должность,
	|	ВТДвижения.Результат КАК Результат,
	|	ВТДвижения.ОтработаноДней КАК ОтработаноДней,
	|	ВТДвижения.Размер КАК Размер,
	|	ВТДвижения.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТПриоритетыВидовРасчета.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТНаборЗаписей
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыВидовРасчета КАК ВТПриоритетыВидовРасчета
	|		ПО ВТДвижения.ВидРасчета = ВТПриоритетыВидовРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНаборЗаписей.НомерСтроки КАК НомерСтроки,
	|	ВТНаборЗаписей.Приоритет КАК Приоритет,
	|	ВТНаборЗаписей.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВТНаборЗаписей.ВидРасчета.Формула КАК Формула,
	|	ВТНаборЗаписей.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени
	|ИЗ
	|	ВТНаборЗаписей КАК ВТНаборЗаписей
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыРасчетаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВедущиеВидыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыВидовРасчета";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПриоритет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//Внешний цикл по категориям
	Пока ВыборкаПриоритет.Следующий() Цикл

		//Запрос для получения базы и данных графика для записей с текущей категорией 
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Менеджер;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТНаборЗаписей.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТЗаписиДляРасчета
		|ИЗ
		|	ВТНаборЗаписей КАК ВТНаборЗаписей
		|ГДЕ
		|	ВТНаборЗаписей.Приоритет = &Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ЗначениеДниФактическийПериодДействия,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниПериодДействия, 0) КАК ЗначениеДниПериодДействия
		|ПОМЕСТИТЬ ВТДанныеГрафика
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета.ТребуетДанныеГрафика = ИСТИНА
		|				И НомерСтроки В
		|					(ВЫБРАТЬ
		|						ВТЗаписиДляРасчета.НомерСтроки
		|					ИЗ
		|						ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета)) КАК ОсновныеНачисленияДанныеГрафика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ОсновныеНачисленияБазаОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДнейБаза
		|ПОМЕСТИТЬ ВТБазаВОсновныхНачислениях
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
		|			&Измерения_ОсновныеНачисления,
		|			&Измерения_ОсновныеНачисления,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета.ТребуетСбораБазы = ИСТИНА
		|				И НомерСтроки В
		|					(ВЫБРАТЬ
		|						ВТЗаписиДляРасчета.НомерСтроки
		|					ИЗ
		|						ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета)) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТЗаписиДляРасчета.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ЗначениеДниФактическийПериодДействия,
		|	ЕСТЬNULL(ВТДанныеГрафика.ЗначениеДниПериодДействия, 0) КАК ЗначениеДниПериодДействия,
		|	ЕСТЬNULL(ВТБазаВОсновныхНачислениях.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВТБазаВОсновныхНачислениях.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза
		|ИЗ
		|	ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеГрафика КАК ВТДанныеГрафика
		|		ПО (ВТДанныеГрафика.НомерСтроки = ВТЗаписиДляРасчета.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаВОсновныхНачислениях КАК ВТБазаВОсновныхНачислениях
		|		ПО ВТЗаписиДляРасчета.НомерСтроки = ВТБазаВОсновныхНачислениях.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТЗаписиДляРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДанныеГрафика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБазаВОсновныхНачислениях";
		
		
		Измерения_ОсновныеНачисления = Новый Массив;
		Измерения_ОсновныеНачисления.Добавить("ФизическоеЛицо");
		Измерения_ОсновныеНачисления.Добавить("Подразделение");
		Измерения_ОсновныеНачисления.Добавить("Должность");
		
		Запрос.УстановитьПараметр("Приоритет", ВыборкаПриоритет.Приоритет);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		Запрос.УстановитьПараметр("Измерения_ОсновныеНачисления", Измерения_ОсновныеНачисления);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		//Выборка с данными для записей текущей категории
		Выборка_ДанныеГрафика_База = РезультатЗапроса.Выбрать();
		
		
		//Вложенный цикл по записям текущей категории
		ВыборкаДетальныеЗаписи = ВыборкаПриоритет.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Запись = НаборЗаписей.Получить(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
			
			Выборка_ДанныеГрафика_База.НайтиСледующий(ВыборкаДетальныеЗаписи.НомерСтроки,"НомерСтроки");
			
		//	Если ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.ПоМесячнойТарифнойСтавкеПоДням Тогда
		//		
		//		Норма = Выборка_ДанныеГрафика_База.ЗначениеДниПериодДействия;
		//		
		//		Если Норма = 0 Тогда
		//			
		//			Сообщение = Новый СообщениеПользователю;
		//			Сообщение.Текст = "Не заполнен график";
		//			Сообщение.Сообщить();
		//			
		//			Возврат;
		//			
		//		КонецЕсли;
		//		
		//		Факт = Выборка_ДанныеГрафика_База.ЗначениеДниФактическийПериодДействия;
		//		
		//		Ставка = Запись.Размер;
		//		
		//		Запись.Результат = Ставка * Факт / Норма;
		//		
		//	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.Процентом Тогда
		//
		//		База = 0;
		//		
		//		Процент = Запись.Размер;
		//		
		//		Запись.Результат = База * Процент / 100;
		//		
		//		
		//	КонецЕсли;
			
			РасчетРесурсов(ВыборкаДетальныеЗаписи,Выборка_ДанныеГрафика_База, Запись);
			
			
			//Проверка - надо ли записать отработанные дни
			Если ВыборкаДетальныеЗаписи.ЗачетОтработанногоВремени Тогда
				
				Запись.ОтработаноДней = Выборка_ДанныеГрафика_База.ЗначениеДниФактическийПериодДействия;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина);
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура РассчитатьРесурсы_ДополнительныеНачисления() 
	
	НаборЗаписей = Движения.ДополнительныеНачисления;
	
	//Получаем упорядоченные по категориям данные текущего набора записей, записанные в БД
	Менеджер = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	ДополнительныеНачисления.Регистратор КАК Регистратор,
	|	ДополнительныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ДополнительныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ДополнительныеНачисления.Активность КАК Активность,
	|	ДополнительныеНачисления.Сторно КАК Сторно,
	|	ДополнительныеНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДополнительныеНачисления.Подразделение КАК Подразделение,
	|	ДополнительныеНачисления.Должность КАК Должность,
	|	ДополнительныеНачисления.Результат КАК Результат,
	|	ДополнительныеНачисления.Размер КАК Размер
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисления КАК ДополнительныеНачисления
	|ГДЕ
	|	ДополнительныеНачисления.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчетаДокумента
	|ИЗ
	|	ВТДвижения КАК ДополнительныеНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыРасчетаДокумента.ВидРасчета КАК ВидРасчета,
	|	ДополнительныеНачисленияВедущиеВидыРасчета.ВидРасчета КАК ВедущийВидРасчета
	|ПОМЕСТИТЬ ВТВедущиеВидыРасчета
	|ИЗ
	|	ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисления.ВедущиеВидыРасчета КАК ДополнительныеНачисленияВедущиеВидыРасчета
	|		ПО ВТВидыРасчетаДокумента.ВидРасчета = ДополнительныеНачисленияВедущиеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТВидыРасчетаДокумента.ВидРасчета) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыВидовРасчета
	|ИЗ
	|	ВТВедущиеВидыРасчета КАК ВТВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ПО ВТВедущиеВидыРасчета.ВедущийВидРасчета = ВТВидыРасчетаДокумента.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВедущиеВидыРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПриоритетыВидовРасчета.Приоритет КАК Приоритет,
	|	ВТДвижения.НомерСтроки КАК НомерСтроки,
	|	ВТДвижения.ВидРасчета КАК ВидРасчета,
	|	ВТДвижения.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТДвижения.Регистратор КАК Регистратор,
	|	ВТДвижения.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТДвижения.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТДвижения.Активность КАК Активность,
	|	ВТДвижения.Сторно КАК Сторно,
	|	ВТДвижения.ФизическоеЛицо,
	|	ВТДвижения.Подразделение КАК Подразделение,
	|	ВТДвижения.Должность КАК Должность,
	|	ВТДвижения.Результат КАК Результат,
	|	ВТДвижения.Размер КАК Размер
	|ПОМЕСТИТЬ ВТНаборЗаписей
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыВидовРасчета КАК ВТПриоритетыВидовРасчета
	|		ПО ВТДвижения.ВидРасчета = ВТПриоритетыВидовРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНаборЗаписей.НомерСтроки КАК НомерСтроки,
	|	ВТНаборЗаписей.ВидРасчета КАК ВидРасчета,
	|	ВТНаборЗаписей.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВТНаборЗаписей.Приоритет КАК Приоритет
	|ИЗ
	|	ВТНаборЗаписей КАК ВТНаборЗаписей
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыРасчетаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВедущиеВидыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыВидовРасчета";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПриоритет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//Внешний цикл по категориям
	Пока ВыборкаПриоритет.Следующий() Цикл
		
		//Запрос для получения базы и данных графика для записей с текущей категорией 
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Менеджер;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТНаборЗаписей.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТЗаписиДляРасчета
		|ИЗ
		|	ВТНаборЗаписей КАК ВТНаборЗаписей
		|ГДЕ
		|	ВТНаборЗаписей.Приоритет = &Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.ОтработаноДнейБаза
		|ПОМЕСТИТЬ ВТБазаВОсновныхНачислениях
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
		|			&ИЗмерения_ДополнительныеНачисления,
		|			&Измерения_ОсновныеНачисления,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета.ТребуетСбораБазы = ИСТИНА
		|				И НомерСтроки В
		|					(ВЫБРАТЬ
		|						ВТЗаписиДляРасчета.НомерСтроки
		|					ИЗ
		|						ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета)) КАК ДополнительныеНачисленияБазаОсновныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.РезультатБаза
		|ПОМЕСТИТЬ ВТБазаВДополнительныхНачислениях
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаДополнительныеНачисления(
		|			&ИЗмерения_ДополнительныеНачисления,
		|			&ИЗмерения_ДополнительныеНачисления,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета.ТребуетСбораБазы = ИСТИНА
		|				И НомерСтроки В
		|					(ВЫБРАТЬ
		|						ВТЗаписиДляРасчета.НомерСтроки
		|					ИЗ
		|						ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета)) КАК ДополнительныеНачисленияБазаДополнительныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТЗаписиДляРасчета.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТБазаВОсновныхНачислениях.РезультатБаза, 0) + ЕСТЬNULL(ВТБазаВДополнительныхНачислениях.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВТБазаВОсновныхНачислениях.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза
		|ИЗ
		|	ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаВОсновныхНачислениях КАК ВТБазаВОсновныхНачислениях
		|		ПО ВТЗаписиДляРасчета.НомерСтроки = ВТБазаВОсновныхНачислениях.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаВДополнительныхНачислениях КАК ВТБазаВДополнительныхНачислениях
		|		ПО ВТЗаписиДляРасчета.НомерСтроки = ВТБазаВДополнительныхНачислениях.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБазаВОсновныхНачислениях
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБазаВДополнительныхНачислениях
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТЗаписиДляРасчета";

		
		Измерения_ДополнительныеНачисления = Новый Массив;
		Измерения_ДополнительныеНачисления.Добавить("ФизическоеЛицо");
		Измерения_ДополнительныеНачисления.Добавить("Подразделение");
		Измерения_ДополнительныеНачисления.Добавить("Должность");
		
		Измерения_ОсновныеНачисления = Новый Массив;
		Измерения_ОсновныеНачисления.Добавить("ФизическоеЛицо");
		Измерения_ОсновныеНачисления.Добавить("Подразделение");
		Измерения_ОсновныеНачисления.Добавить("Должность");
		
		Запрос.УстановитьПараметр("Измерения_ДополнительныеНачисления"
		, Измерения_ДополнительныеНачисления);
		Запрос.УстановитьПараметр("Измерения_ОсновныеНачисления"
		, Измерения_ОсновныеНачисления);
		Запрос.УстановитьПараметр("Приоритет", ВыборкаПриоритет.Приоритет);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		//Выборка с данными для записей текущей категории
		Выборка_ДанныеГрафика_База = РезультатЗапроса.Выбрать();
		
		
		//Вложенный цикл по записям текущей категории
		ВыборкаДетальныеЗаписи = ВыборкаПриоритет.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Запись = НаборЗаписей.Получить(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
			
			Выборка_ДанныеГрафика_База.НайтиСледующий(ВыборкаДетальныеЗаписи.НомерСтроки,"НомерСтроки");
			
			РасчетРесурсов(ВыборкаДетальныеЗаписи, Выборка_ДанныеГрафика_База, Запись);
			
		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьРесурсы_Удержания() 
	
	НаборЗаписей = Движения.Удержания;

    //Получаем упорядоченные по категориям данные текущего набора записей, записанные в БД
	Менеджер = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.НомерСтроки КАК НомерСтроки,
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	Удержания.ПериодРегистрации КАК ПериодРегистрации,
	|	Удержания.Регистратор КАК Регистратор,
	|	Удержания.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	Удержания.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	Удержания.Активность КАК Активность,
	|	Удержания.Сторно КАК Сторно,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Подразделение КАК Подразделение,
	|	Удержания.Должность КАК Должность,
	|	Удержания.Результат КАК Результат,
	|	Удержания.Размер КАК Размер
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДвижения.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчетаДокумента
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыРасчетаДокумента.ВидРасчета КАК ВидРасчета,
	|	УдержанияВедущиеВидыРасчета.ВидРасчета КАК ВедущийВидРасчета
	|ПОМЕСТИТЬ ВТВедущиеВидыРасчета
	|ИЗ
	|	ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания.ВедущиеВидыРасчета КАК УдержанияВедущиеВидыРасчета
	|		ПО ВТВидыРасчетаДокумента.ВидРасчета = УдержанияВедущиеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТВидыРасчетаДокумента.ВидРасчета) КАК Приоритет
	|ПОМЕСТИТЬ ВТПриоритетыВидовРасчета
	|ИЗ
	|	ВТВедущиеВидыРасчета КАК ВТВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыРасчетаДокумента КАК ВТВидыРасчетаДокумента
	|		ПО ВТВедущиеВидыРасчета.ВедущийВидРасчета = ВТВидыРасчетаДокумента.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВедущиеВидыРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижения.НомерСтроки КАК НомерСтроки,
	|	ВТДвижения.ВидРасчета КАК ВидРасчета,
	|	ВТДвижения.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТДвижения.Регистратор КАК Регистратор,
	|	ВТДвижения.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВТДвижения.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВТДвижения.Активность КАК Активность,
	|	ВТДвижения.Сторно КАК Сторно,
	|	ВТДвижения.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДвижения.Подразделение КАК Подразделение,
	|	ВТДвижения.Должность КАК Должность,
	|	ВТДвижения.Результат КАК Результат,
	|	ВТДвижения.Размер КАК Размер,
	|	ВТПриоритетыВидовРасчета.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТНаборЗаписей
	|ИЗ
	|	ВТДвижения КАК ВТДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыВидовРасчета КАК ВТПриоритетыВидовРасчета
	|		ПО ВТДвижения.ВидРасчета = ВТПриоритетыВидовРасчета.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНаборЗаписей.НомерСтроки КАК НомерСтроки,
	|	ВТНаборЗаписей.ВидРасчета КАК ВидРасчета,
	|	ВТНаборЗаписей.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВТНаборЗаписей.Приоритет КАК Приоритет
	|ИЗ
	|	ВТНаборЗаписей КАК ВТНаборЗаписей
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыРасчетаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВедущиеВидыРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПриоритетыВидовРасчета";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПриоритет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//Внешний цикл по категориям
	Пока ВыборкаПриоритет.Следующий() Цикл
		
		//Запрос для получения базы и данных графика для записей с текущей категорией 
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Менеджер;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТНаборЗаписей.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТЗаписиДляРасчета
		|ИЗ
		|	ВТНаборЗаписей КАК ВТНаборЗаписей
		|ГДЕ
		|	ВТНаборЗаписей.Приоритет = &Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УдержанияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	УдержанияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза,
		|	УдержанияБазаОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДнейБаза
		|ПОМЕСТИТЬ ВТБазаВОсновныхНачислениях
		|ИЗ
		|	РегистрРасчета.Удержания.БазаОсновныеНачисления(
		|			&ИЗмерения_Удержания,
		|			&Измерения_ОсновныеНачисления,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета.ТребуетСбораБазы = ИСТИНА
		|				И НомерСтроки В
		|					(ВЫБРАТЬ
		|						ВТЗаписиДляРасчета.НомерСтроки
		|					ИЗ
		|						ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета)) КАК УдержанияБазаОсновныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УдержанияБазаДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	УдержанияБазаДополнительныеНачисления.РезультатБаза КАК РезультатБаза
		|ПОМЕСТИТЬ ВТБазаВДополнительныхНачислениях
		|ИЗ
		|	РегистрРасчета.Удержания.БазаДополнительныеНачисления(
		|			&ИЗмерения_Удержания,
		|			&ИЗмерения_ДополнительныеНачисления,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета.ТребуетСбораБазы = ИСТИНА
		|				И НомерСтроки В
		|					(ВЫБРАТЬ
		|						ВТЗаписиДляРасчета.НомерСтроки
		|					ИЗ
		|						ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета)) КАК УдержанияБазаДополнительныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТЗаписиДляРасчета.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТБазаВОсновныхНачислениях.РезультатБаза, 0) + ЕСТЬNULL(ВТБазаВДополнительныхНачислениях.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВТБазаВОсновныхНачислениях.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза
		|ИЗ
		|	ВТЗаписиДляРасчета КАК ВТЗаписиДляРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаВОсновныхНачислениях КАК ВТБазаВОсновныхНачислениях
		|		ПО ВТЗаписиДляРасчета.НомерСтроки = ВТБазаВОсновныхНачислениях.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаВДополнительныхНачислениях КАК ВТБазаВДополнительныхНачислениях
		|		ПО ВТЗаписиДляРасчета.НомерСтроки = ВТБазаВДополнительныхНачислениях.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБазаВОсновныхНачислениях
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБазаВДополнительныхНачислениях
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТЗаписиДляРасчета";
	
		Измерения_ДополнительныеНачисления = Новый Массив;
		Измерения_ДополнительныеНачисления.Добавить("ФизическоеЛицо");
		Измерения_ДополнительныеНачисления.Добавить("Подразделение");
		Измерения_ДополнительныеНачисления.Добавить("Должность");
		
		Измерения_ОсновныеНачисления = Новый Массив;
		Измерения_ОсновныеНачисления.Добавить("ФизическоеЛицо");
		Измерения_ОсновныеНачисления.Добавить("Подразделение");
		Измерения_ОсновныеНачисления.Добавить("Должность");
		
		Измерения_Удержания = Новый Массив;
		Измерения_Удержания.Добавить("ФизическоеЛицо");
		Измерения_Удержания.Добавить("Подразделение");
		Измерения_Удержания.Добавить("Должность");
		
		Запрос.УстановитьПараметр("Измерения_ДополнительныеНачисления", Измерения_ДополнительныеНачисления);
		Запрос.УстановитьПараметр("Измерения_ОсновныеНачисления", Измерения_ОсновныеНачисления);
		Запрос.УстановитьПараметр("Измерения_Удержания", Измерения_Удержания);
	
		
		Запрос.УстановитьПараметр("Приоритет", ВыборкаПриоритет.Приоритет);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		//Выборка с данными для записей текущей категории
		Выборка_ДанныеГрафика_База = РезультатЗапроса.Выбрать();
		
		
		//Вложенный цикл по записям текущей категории
		ВыборкаДетальныеЗаписи = ВыборкаПриоритет.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Запись = НаборЗаписей.Получить(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
			
			Выборка_ДанныеГрафика_База.НайтиСледующий(ВыборкаДетальныеЗаписи.НомерСтроки,"НомерСтроки");
			
			РасчетРесурсов(ВыборкаДетальныеЗаписи, Выборка_ДанныеГрафика_База, Запись);

		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетРесурсов(ВыборкаДетальныеЗаписи,Выборка_ДанныеГрафика_База, Запись)
	
	Если ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.ПоМесячнойТарифнойСтавкеПоДням Тогда
		
		Норма = Выборка_ДанныеГрафика_База.ЗначениеДниПериодДействия;
		
		Если Норма = 0 Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен график";
			Сообщение.Сообщить();
			
			Возврат;
			
		КонецЕсли;
		
		Факт = Выборка_ДанныеГрафика_База.ЗначениеДниФактическийПериодДействия;
		
		Ставка = Запись.Размер;
		
		Запись.Результат = Ставка * Факт / Норма;
		
	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.Процентом Тогда
		
		База = Выборка_ДанныеГрафика_База.РезультатБаза;
		
		Процент = Запись.Размер;
		
		Запись.Результат = База * Процент / 100;
		
	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.ФиксированнойСуммой Тогда
		
		Запись.Результат = Запись.Размер;
		
	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.КомпенсацияЗаДень Тогда
		
		СуммаЗаДень = Запись.Размер;
		
		КоличествоДнейВКомандировке = 0;
		
		Запись.Результат = СуммаЗаДень * КоличествоДнейВКомандировке;
		
	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.НулеваяСумма Тогда
		
		Запись.Результат = 0;
		
	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.ПоСреднемуЗаработку Тогда
		
	ИначеЕсли ВыборкаДетальныеЗаписи.СпособРасчета = Перечисления.СпособыРасчета.ПоФормуле Тогда
		
		Выполнить("Запись.Результат = " + ВыборкаДетальныеЗаписи.Формула);
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти 


#Область ДляРасчетаВФорме


Процедура ПерезаполнитьТабличнуюЧасть_ОсновныеНачисления() 
	
	ОсновныеНачисления.Очистить();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		НоваяСтрока = ОсновныеНачисления.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
	
	КонецЦикла;

КонецПроцедуры

Процедура ПерезаполнитьТабличнуюЧасть_ДополнительныеНачисления() 
	
	ДополнительныеНачисления.Очистить();
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
	
		НоваяСтрока = ДополнительныеНачисления.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
	
	КонецЦикла;

КонецПроцедуры

Процедура ПерезаполнитьТабличнуюЧасть_Удержания() 
	
	Удержания.Очистить();
	
	Для каждого Движение Из Движения.Удержания Цикл
	
		НоваяСтрока = Удержания.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
	
	КонецЦикла;

КонецПроцедуры


Процедура ОчиститьНаборыЗаписейПослеРасчета()

	Движения.ОсновныеНачисления.Очистить();;
	Движения.ОсновныеНачисления.Записать();
	
	Движения.ДополнительныеНачисления.Очистить();
	Движения.ДополнительныеНачисления.Записать();
	
	Движения.Удержания.Очистить();
	Движения.Удержания.Записать();

КонецПроцедуры


#КонецОбласти
