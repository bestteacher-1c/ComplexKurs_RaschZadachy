
Процедура ОбработкаПроведения(Отказ, Режим)

	ЗаполнитьНаборЗаписей_ДополнительныеНачисления();
	
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Движения.Записать();
	
	РассчитатьРесурсы_ДополнительныеНачисления();
	
	//@skip-warning
	Расчет.ЗаполнитьНаборЗаписей_ВзаиморасчетыСРаботниками(Движения.ВзаиморасчетыСРаботниками);

КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_ДополнительныеНачисления()
    
    Движение = Движения.ДополнительныеНачисления.Добавить();
	
	Движение.Сторно = Ложь;
    Движение.ВидРасчета = ПланыВидовРасчета.ДополнительныеНачисления.ПремияРуководителю;
    
    Движение.ПериодРегистрации = ПериодРегистрации;
    
    Движение.БазовыйПериодНачало = ДобавитьМесяц(ПериодРегистрации,-1);
    Движение.БазовыйПериодКонец = ПериодРегистрации -1;
    
    Движение.ФизическоеЛицо = ФизическоеЛицо;
    Движение.Подразделение = Подразделение;
    Движение.Должность = Должность;
    Движение.Результат = 0;
    Движение.Размер = РазмерПремии;
    
КонецПроцедуры

Процедура РассчитатьРесурсы_ДополнительныеНачисления()
	
	Возврат; //Заглушка
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"";
	
	Измерения_ДополнительныеНачисления = Новый СписокЗначений;
	Измерения_ДополнительныеНачисления.Добавить("Подразделение");
	
	Измерения_ОсновныеНачисления = Новый СписокЗначений;
	Измерения_ОсновныеНачисления.Добавить("Подразделение");
	
	ПоляРазрезы_ДополнительныеНачисления = Новый СписокЗначений;
	ПоляРазрезы_ДополнительныеНачисления.Добавить("Сотрудник");	
	
	ПоляРазрезы_ОсновныеНачисления= Новый СписокЗначений;
	ПоляРазрезы_ОсновныеНачисления.Добавить("ФизическоеЛицо");	

	Запрос.УстановитьПараметр("Измерения_ДополнительныеНачисления", Измерения_ДополнительныеНачисления);
	Запрос.УстановитьПараметр("Измерения_ОсновныеНачисления", Измерения_ОсновныеНачисления);
	Запрос.УстановитьПараметр("ПоляРазрезы_ДополнительныеНачисления", ПоляРазрезы_ДополнительныеНачисления);
	Запрос.УстановитьПараметр("ПоляРазрезы_ОсновныеНачисления", ПоляРазрезы_ОсновныеНачисления);
	
	Запрос.УстановитьПараметр("КатегорияРасчета", Перечисления.КатегорииРасчетов.ЗависимоеВторогоУровня);
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
    Для каждого Запись Из Движения.ДополнительныеНачисления Цикл
		
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Запись.НомерСтроки, "НомерСтроки") Тогда
			
			Запись.Результат = ВыборкаДетальныеЗаписи.РезультатБаза * Запись.Размер / 100;
		
		КонецЕсли;
	
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записать(,Истина);
	

	

КонецПроцедуры

