
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриказОПриеме") Тогда

		ДокументОснование = ДанныеЗаполнения;
		ГрафикРаботы = ДанныеЗаполнения.ГрафикРаботы;
		Должность = ДанныеЗаполнения.Должность;
		Подразделение = ДанныеЗаполнения.Подразделение;
		ФизическоеЛицо = ДанныеЗаполнения.ФизическоеЛицо;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КадровоеИзменение") Тогда

		ДокументОснование = ДанныеЗаполнения;
		ГрафикРаботы = ДанныеЗаполнения.ГрафикРаботы;
		Должность = ДанныеЗаполнения.Должность;
		Подразделение = ДанныеЗаполнения.Подразделение;
		ФизическоеЛицо = ДанныеЗаполнения.ФизическоеЛицо;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ПлановыеДополнительныеНачисления.Записывать = Истина;
	Движения.ПлановыеОсновныеНачисления.Записывать = Истина;
	Движения.ПлановыеУдержания.Записывать = Истина;
	Движения.Сотрудники.Записывать = Истина;
	
	Движения.Записать();
	
	ЗаполнитьНЗ_Сотрудники();
	ЗаполнитьНЗ_ПлановыеДополнительныеНачисления();
	ЗаполнитьНЗ_ПлановыеОсновныеНачисления();
	ЗаполнитьНЗ_ПлановыеУдержания();
	
	Движения.ПлановыеДополнительныеНачисления.Записывать = Истина;
	Движения.ПлановыеОсновныеНачисления.Записывать = Истина;
	Движения.ПлановыеУдержания.Записывать = Истина;
	Движения.Сотрудники.Записывать = Истина;
	
	Движения.Записать();
	
	ПроверитьНаличиеОдногоНачисленияЗачетОтработанногоВремени(Отказ);

	
КонецПроцедуры

Процедура ЗаполнитьНЗ_Сотрудники()
	
	Движение = Движения.Сотрудники.Добавить();
	
	Движение.Период = ДатаСобытия;
	Движение.ФизическоеЛицо = ФизическоеЛицо;
	Движение.Подразделение = Подразделение;
	Движение.Должность = Должность;
	Движение.Состояние = Перечисления.СостоянияФизическогоЛица.Перемещение;
	Движение.ГрафикРаботы = ГрафикРаботы;
	
КонецПроцедуры

Процедура ЗаполнитьНЗ_ПлановыеОсновныеНачисления()
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		// регистр ПлановыеОсновныеНачисления 
		Движение = Движения.ПлановыеОсновныеНачисления.Добавить();
		Движение.Период = ДатаСобытия;
		Движение.ФизическоеЛицо = ФизическоеЛицо;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.Размер = ТекСтрокаОсновныеНачисления.Размер;
	КонецЦикла;
	
	
	
КонецПроцедуры

Процедура ЗаполнитьНЗ_ПлановыеДополнительныеНачисления()
	
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		// регистр ПлановыеДополнительныеНачисления 
		Движение = Движения.ПлановыеДополнительныеНачисления.Добавить();
		Движение.Период = ДатаСобытия;
		Движение.ФизическоеЛицо = ФизическоеЛицо;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.Размер = ТекСтрокаДополнительныеНачисления.Размер;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаполнитьНЗ_ПлановыеУдержания()
	
	Для Каждого ТекСтрокаУдержания Из Удержания Цикл
		// регистр ПлановыеУдержания 
		Движение = Движения.ПлановыеУдержания.Добавить();
		Движение.Период = ДатаСобытия;
		Движение.ФизическоеЛицо = ФизическоеЛицо;
		Движение.ВидРасчета = ТекСтрокаУдержания.ВидРасчета;
		Движение.Размер = ТекСтрокаУдержания.Размер;
	КонецЦикла;
	
	
КонецПроцедуры


Процедура ПроверитьНаличиеОдногоНачисленияЗачетОтработанногоВремени(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлановыеОсновныеНачисленияСрезПоследних.ВидРасчета
	|ПОМЕСТИТЬ ВТОсновныеНачисления
	|ИЗ
	|	РегистрСведений.ПлановыеОсновныеНачисления.СрезПоследних(&Период, ФизическоеЛицо = &ФизическоеЛицо) КАК ПлановыеОсновныеНачисленияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ВТОсновныеНачисления.ВидРасчета) КАК ВидРасчета 
	|ИЗ
	|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
	|ГДЕ
	|	ВТОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени = ИСТИНА";
	
	Запрос.УстановитьПараметр("Период",ДатаСобытия);
	Запрос.УстановитьПараметр("ФизическоеЛицо",ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Если ВыборкаДетальныеЗаписи.ВидРасчета > 1 Тогда
			
			Отказ = Истина;
			
			Сообщить("Для сотрудника можно указать только одно начисления, учитывающее отработанное время!");
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ВидРасчета = 0 Тогда
			
			Отказ = Истина;
			
			Сообщить("Для сотрудника нужно указать одно начисления, учитывающее отработанное время!");
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

